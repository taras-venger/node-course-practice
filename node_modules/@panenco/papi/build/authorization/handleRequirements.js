"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleRequirements = void 0;
const contracts_1 = require("../contracts");
/**
 * @internal
 * Validate an array of groups of requirements where within a group all requirements need to be valid
 *
 * Example1: [[valid1, valid2], [valid3, invalid1]] => success
 *
 * Example2: [valid1, invalid1] => success
 *
 * Example3: [[valid1, invalid1]] => fail
 * @param requirements List of groups to verify
 * @param request Express request
 *
 * @category Authorization
 */
const handleRequirements = async (requirements, request) => {
    const list = Array.isArray(requirements) ? requirements : [requirements];
    const functionsToValidate = list.map(item => async () => {
        const items = Array.isArray(item) ? item : [item];
        await Promise.all(items.map(r => r(request)));
    });
    await promiseAny(functionsToValidate);
};
exports.handleRequirements = handleRequirements;
const promiseAny = async (functionsToValidate) => {
    const errors = [];
    if (!(functionsToValidate === null || functionsToValidate === void 0 ? void 0 : functionsToValidate.length))
        return;
    await new Promise((res, rej) => {
        functionsToValidate.map(async (validationFunc) => {
            try {
                const v = await validationFunc();
                res(v);
            }
            catch (error) {
                errors.push(error);
                if (errors.length !== functionsToValidate.length)
                    return;
                rej(new contracts_1.Forbidden('forbidden', errors.map(e => e.reason).join(', ')));
            }
        });
    });
};
//# sourceMappingURL=handleRequirements.js.map