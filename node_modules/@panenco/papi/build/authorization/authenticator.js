"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAuthenticator = void 0;
const authorization_1 = require(".");
const contracts_1 = require("../contracts");
/**
 * Integrates with routing controller `@Authorize` decorator
 * Supply an array of groups where within a group all requirements need to be valid
 * Example1: [[valid1, valid2], [valid3, invalid1]] => success
 * Example2: [valid1, invalid1] => success
 * Example3: [[valid1, invalid1]] => fail
 * @param jwtSecret JWT secret to be used to verify tokens
 * @returns Authentication checker that should be passed into useExpressServer => authorizationChecker
 *
 * @category Authorization
 */
const getAuthenticator = (jwtSecret) => {
    const authenticator = async (action, requirements) => {
        const token = action.request.header('x-auth');
        if (!token) {
            throw new contracts_1.Unauthorized('invalidToken', 'Invalid token');
        }
        action.request.token = (0, authorization_1.getAccessTokenData)(token, jwtSecret);
        await (0, authorization_1.handleRequirements)(requirements, action.request);
        return true;
    };
    return authenticator;
};
exports.getAuthenticator = getAuthenticator;
//# sourceMappingURL=authenticator.js.map