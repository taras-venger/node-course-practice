"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Nested = void 0;
require("reflect-metadata");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
/**
 * Nested objects with this decorator will also be validated.
 *
 * Transforms the nested objects to the defined type
 * @param type The type to validate and transform the nested property
 * @param isArray Whether the property is an object or an array of objects
 *
 * @category Decorator
 */
const Nested = (type, isArray = false) => {
    const nestedValidation = (0, class_validator_1.ValidateNested)({
        each: isArray,
        context: type,
    });
    const typeParser = (0, class_transformer_1.Type)(() => type);
    const validateIf = (0, class_validator_1.ValidateIf)((_, value) => value !== null);
    const validateAsObjectOrArray = isArray ? (0, class_validator_1.IsArray)() : (0, class_validator_1.IsObject)();
    return (object, propertyName) => {
        validateIf(object, propertyName);
        nestedValidation(object, propertyName);
        validateAsObjectOrArray(object, propertyName);
        typeParser(object, propertyName);
    };
};
exports.Nested = Nested;
//# sourceMappingURL=nested.decorator.js.map