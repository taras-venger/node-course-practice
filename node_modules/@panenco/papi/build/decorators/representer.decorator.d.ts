import { ClassType } from '../utils';
/**
 * Decorator to be used on [[routing-controllers]] controller method
 *
 * Apply representation transformation on a controller method output.
 *
 * The result of the transformed return value will be JSON serialized as the response body.
 *
 * Must be applied on a controller method.
 * @param representation class type of the representation to be used by [[class-transformer]]
 * @param statusCode Optional Status code of the success response
 * @param options OpenAPI options for API documentation
 *
 * @category Decorator
 */
export declare const Representer: (representation: ClassType<any>, statusCode?: number, options?: {
    contentType?: string;
    description?: string;
}) => (target: any, key: string) => void;
/**
 * Decorator to be used on [[routing-controllers]] controller method
 *
 * Apply paginated list representation transformation on a controller method output.
 *
 * The result of the transformed return value will be JSON serialized as the response body.
 *
 * Must be applied on a controller method.
 * @param representation class type of the representation to be used by [[class-transformer]]
 * @param statusCode Optional Status code of the success response
 * @param options OpenAPI options for API documentation
 *
 * @category Decorator
 */
export declare const ListRepresenter: (representation: ClassType<any>, statusCode?: number, options?: {
    contentType?: string;
    description?: string;
}) => (target: any, key: string) => void;
/**
 * Decorator to be used on [[routing-controllers]] controller method
 *
 * Apply array representation transformation on a controller method output.
 *
 * The result of the transformed return value will be JSON serialized as the response body.
 *
 * Must be applied on a controller method.
 * @param representation class type of the representation to be used by [[class-transformer]]
 * @param statusCode Optional Status code of the success response
 * @param options OpenAPI options for API documentation
 *
 * @category Decorator
 */
export declare const ArrayRepresenter: (representation: ClassType<any>, statusCode?: number, options?: {
    contentType?: string;
    description?: string;
}) => (target: any, key: string) => void;
